syntax = "proto3";
package Protocol;

import "Enum.proto";
import "Struct.proto";

message C_LOGIN
{

}

message S_LOGIN
{
	bool success = 1;
}

message C_ENTER_GAME
{
	PlayerType player_type = 1;
}

message C_ENTER_GAME_SUCCESS
{
	PlayerInfo player = 1;
}

message S_ENTER_GAME
{
	bool success = 1;
	PlayerInfo player = 2;
}

message C_LEAVE_GAME
{

}

message C_SPAWN_PROJECTILE
{
	ProjectileBasicInfo info = 1;
	SkillMesh mesh = 2;
	Vector3 size = 3;
}	

message S_SPAWN_PROJECTILE_SUCESSE
{
	uint64 projectile_id = 1;
	Vector3 size = 2;
	SkillMesh mesh = 3;
}

message S_LEAVE_GAME
{

}

// 플레이어의 움직임
message C_MOVE
{
	PlayerMoveInfo player_move_info = 1;
	Vector3 dir = 2;
	SkillMesh mesh = 3;
	bool IsMove = 4;
}

message C_MOVE_PROJECTILE
{
	ProjectileInfo projectile_info = 1;
}

message S_MOVE
{
	PlayerMoveInfo player_move_info = 1;
}

message S_ACT
{
	PlayerMoveInfo player_move_info = 1;
}

message S_UPDATE_PLAYER
{
	PlayerUpdateInfo player_update_info = 1;
}

// 몬스터 정보 전송
message S_MONSTER_INFO
{	
	repeated MonsterInfo monster_info = 1;
}

message S_PROJECTILE_INFO
{	
	ProjectileInfo projectile_info = 1;
}

message S_PROJECTILE_EFFECT
{
	uint32 projectile_id = 1;
}

message C_PROJECTILE_EFFECT
{
	uint32 projectile_id = 1;
}

// 플레이어만 스포인가 오브젝트 전체가 스폰인가?
message S_SPAWN
{
	repeated ObjectInfo objects = 1;
}

message S_SPAWN_NEW_PLAYER
{
	PlayerInfo player = 1;
}

message S_SPAWN_EXISTING_PLAYER
{
	repeated PlayerInfo player = 1;
}

message S_DESPAWN_PLAYER
{
	uint64 player_ids = 1;
}

message S_DESPAWN
{
	repeated uint64 object_ids = 1;
}

message S_GATE_OPNE
{
	repeated ObjectInfo open_objects = 1;
}

message S_GATE_CLOSE
{
	repeated ObjectInfo cloase_objects = 1;
}

message S_SPAWN_NPC
{
	repeated NpcInfo npc_info = 1;
}

message C_BUY_ITEM
{
	uint32 item_id = 1;
}

message C_BUY_SKILL
{
	uint32 skill_id = 1;
}

message S_UPDATE_ITEM
{
	uint32 npc_id = 1;
	repeated ItemInfo item_info = 2;
	repeated SkillInfo skill_info = 3;
}

message S_BUY_ITEM
{
	uint32 player_id = 1;
	bool is_success = 2;
	uint32 item_id = 3;
}

message S_BUY_SKILL
{
	uint32 player_id = 1;
	bool is_success = 2;
	uint32 skill_id = 3;
}