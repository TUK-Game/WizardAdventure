# 샘플 프로젝트는 시간상 mapObject로 퉁쳤음. => 게임오브젝트와 플레이어가 분리되지 않음.
- CRoom::Broadcast를 보면 mapObject를 전부 순회하면서 dynamic_cast로 플레이어를 검사하여 패킷을 보내고 있는데..
=> 실제 적용할 때는 플레이어를 가리키는 배열만 순회하면 됨. (몬스터같은거 추가될 때도 EnterRoom을 사용할껄 고려해서 설계하다가 이렇게 됨.)

# 샘플에는 없지만 object_id 말고 player_id(session_id)도 추가되어야 함.

# 우리 게임 생각해서 플레이어는 4명까지만 접속 가능하게 막아놓음
- CGameSessionManager 생성자보면 세션을 배열로 4개만 만들어놓은거 볼 수 있음.

# 패킷 만드는 방법
- Protocol.proto에서 필요한 패킷을 추가할 수 있음. 아래 컨벤션을 지켜줘야 함.
	- 서버 -> 클라이언트 패킷은 S_
	- 클라이언트 -> 서버 패킷은 C_
- 빌드하면 자동으로 Protocol.proto에서 변경된 내용이 Client/Server PacketHandler.h 에 코드가 생성됨.

# 패킷 보내는 과정
- 패킷 선언 -> 패킷 채우기 -> 직렬화 -> 발송
- ex)
// Protocol::C_LOGIN pkt;
// (채우기 중략)
// auto sendBuffer = ClientPacketHandler::MakeSendBuffer(pkt);
// Send(sendBuffer);

- 더미클라이언트 말고도 이전에 배포한 리슨서버 샘플 참고하면 도움 됨.

